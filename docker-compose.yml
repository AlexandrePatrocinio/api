services:
  api1: # API - Instance 1
    build: .
    image: api:v1
    volumes:
      - ./Configuration:/app/Configuration    
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'
    hostname: api1
    depends_on:
      - db
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.75GB'

  api2: # API - Instance 2
    build: .
    image: api:v1
    volumes:
      - ./Configuration:/app/Configuration
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'    
    hostname: api2
    depends_on:
      - db
    ports:
      - "8081:8080"
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.75GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro    
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.5GB'
  db: # Postgres tests
    build: SQLScripts/Postgres/.
    image: postgres:api
    environment:
      POSTGRES_DB: 'api'
      POSTGRES_PASSWORD_FILE: '/run/secrets/postgres-passwd'
    ports:
      - "5432:5432"    
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2.0GB'
  # db: # SQL Server tests
  #   build: SQLScripts/Sqlserver/.
  #   image: sqlserver:api
  #   environment:
  #     ACCEPT_EULA: 'Y'
  #     MSSQL_SA_PASSWORD: ${SA_PASSWORD}
  #   ports:
  #     - "1433:1433"
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '1'
  #         memory: '3.0GB'